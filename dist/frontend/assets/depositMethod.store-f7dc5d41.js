import{a1 as $,S,r as p,a2 as r}from"./index-c50fc4de.js";const m=$("depositMethod",()=>{const o=S(),a="deposit-method",n=p([]),u=p(!1);function d(t){n.value=t}function c(t){u.value=t}function h(t,e){const s=n.value;if(!s)return;const i=s.findIndex(l=>l._id===t);s[i]=e,d(s)}async function f(t){try{o.setPost(!0);const e=await r.patch(`${a}/update-status`,t);h(t.depositMethodId,e.data.data.depositMethod),o.handlePost(e)}catch(e){console.error(e),o.handlePost(e.response)}}async function M(){c(!1);try{const t=await r.get(`${a}/master`);d(t.data.data.depositMethods)}catch(t){console.error(t),o.handlePost(t.response)}c(!0)}async function P(){c(!1);try{const t=await r.get(`${a}`);d(t.data.data.depositMethods)}catch(t){console.error(t),o.handlePost(t.response)}c(!0)}async function y(t){try{o.setPost(!0);const e=await r.post(`${a}/create`,t),{depositMethod:s}=e.data.data;d([...n.value,s]),o.handlePost(e)}catch(e){console.error(e),o.handlePost(e.response)}}async function D(t){try{o.setPost(!0);const e=await r.put(`${a}/update`,t);h(t.depositMethodId,e.data.data.depositMethod),o.handlePost(e)}catch(e){console.error(e),o.handlePost(e.response)}}async function w(t){try{o.setPost(!0);const e=await r.delete(`${a}/delete/${t}`),s=n.value;if(!s)return;const i=s.filter(l=>l._id!==t);d(i),o.handlePost(e)}catch(e){console.error(e),o.handlePost(e.response)}}return{loaded:u,depositMethods:n,fetchAll:M,fetchUsersAll:P,addNewDepositMethod:y,updateDepositMethodStatus:f,deleteDepositMethod:w,updateDepositMethod:D}});export{m as u};
